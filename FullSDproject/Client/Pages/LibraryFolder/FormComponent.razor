@inject HttpClient _client

<EditForm Model="@copy" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Game: </label>
            <div>
                <InputSelect @bind-Value="copy.GameId" class="form-control">
                    <option value="">-- Select Name --</option>
                    @if (Games != null)
                    {
                        foreach (var game in Games)
                        {
                            <option value="@game.Id">@game.Title</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => copy.GameId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Order: </label>
            <div>
                <InputSelect @bind-Value="copy.OrderId" class="form-control">
                    <option value="">-- Select Order --</option>
                    @if (Orders != null)
                    {
                        foreach (var order in Orders)
                        {
                            <option value="@order.Id">@order.Id</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => copy.GameId)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="cart" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Copy copy { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Game> Games;
    private IList<Order> Orders;

    protected async override Task OnInitializedAsync()
    {
        Games = await _client.GetFromJsonAsync<List<Game>>("api/games");
        Orders = await _client.GetFromJsonAsync<List<Order>>("api/orders");
    }
}