@page "/store"
@inject NavigationManager NavManager
@inject HttpClient _client
@inject IJSRuntime js

@* Error handling *@
@inject HttpInterceptorService _interceptor 
@implements IDisposable

<h1>Store</h1>
<button class="btn btn-primary" @onclick="ToCart">Go to cart</button>

@if (Games == null)
{
    <div class="alert alert-info">Loading Games...</div>
}
else
{
    //Below is the container for the different games.
    <div class="container flex">
        @foreach (var game in Games)
        {
            <div class="StoreCard">
                <div class="card" style="width: 18rem;">
                    <img class="card-img-top" src="pictures/@game.Thumbnail">
                    <div class="card-body">
                        <h5 class="card-title">@game.Title</h5>
                        <p class="card-text">@game.Publisher</p>
                        <a href="" class="btn btn-primary">@(game.Price.ToString("C"))</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

<hr />
<footer>&copy The Cyclosion 2021-2022</footer>
@code {
    private void ToCart()
    {
        NavManager.NavigateTo("/cart");
    }

    private List<Game> Games;

    protected override async Task OnInitializedAsync()
    {
        //error handling
        _interceptor.MonitorEvent();
        //line break
        Games = await _client.GetFromJsonAsync<List<Game>>("api/games");
    }

    //error handling
    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }
}
